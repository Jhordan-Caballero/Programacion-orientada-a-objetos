abstract class Avion {
    public String modelo;
    public int capacidad;

    public Avion(String modelo, int capacidad) {
        this.modelo = modelo;
        this.capacidad = capacidad;
    }

    public void volar() {
        System.out.println(modelo + " está volando a gran altura.");
    }

    public abstract void despegar();
}


class AvionComercial extends Avion {
    private String aerolinea;

    public AvionComercial(String modelo, int capacidad, String aerolinea) {
        super(modelo, capacidad);
        this.aerolinea = aerolinea;
    }

    @Override
    public void despegar() {
        System.out.println(modelo + " de " + aerolinea + " esta despegando con " + capacidad + " pasajeros.");
    }
}


class AvionMilitar extends Avion {
    private String pais;

    public AvionMilitar(String modelo, int capacidad, String pais) {
        super(modelo, capacidad);
        this.pais = pais;
    }

    @Override
    public void despegar() {
        System.out.println("Avión militar " + modelo + " del pais " + pais + " esta despegando.");
    }
}

public class Main {
    public static void main(String[] args) {
        AvionComercial avionComercial = new AvionComercial("Boeing 777", 350, "Delta Airlines");
        AvionMilitar avionMilitar = new AvionMilitar("F-16", 1, "EE. UU.");

        avionComercial.volar();   
        avionComercial.despegar(); 

        System.out.println();

        avionMilitar.volar();   
        avionMilitar.despegar(); 
    }
}
